[Getting Started.txt]
					
	LAMW: Lazarus Android Module Wizard

		RAD Android!

	"Getting Started" for Windows [by Jose Marques Pessoa]

	Linux Install Tutorial:  LAMW folder  "...docs\linux"

	New! "LAMW Manager" https://forum.lazarus.freepascal.org/index.php/topic,45361.0.html

		https://github.com/DanielOliveiraSouza/LAMW4Linux-installer
		https://github.com/DanielOliveiraSouza/LAMW4Windows-installer
                  

	About MacOS: X11 [libGL.dylib] is no longer bundled with Mountain Lion (and later!)			
			[This prevents/drop some LAMW features, 
			including the use of OpenGL components "jCanvasES1" and "jCanvasES2"]

	About MacOs Install:  [adapted from ".../docs/linux/tutorial_by_waynesherman]
		.Install [I] Infrastructure
		.Install FPCUpdeluxe
                        https://github.com/LongDirtyAnimAlf/fpcupdeluxe/releases/download/1.6.2y2/fpcupdeluxe-x86_64-darwin-cocoa.zip
		.Use FPCUpdeluxe to Install FPC+Laz   [trunk or  stable or ...]
		.Use FPCUpdeluxe to Install arm/android cross-compile		
					  
.Github
	ref. https://github.com/jmpessoa/lazandroidmodulewizard

.Forum
	ref. http://forum.lazarus.freepascal.org/index.php/topic,21919.0.html

I. Infrastructure

.Java JDK 8 : [recommended!!!]

	http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
 
	Warning:  Java JDK > 8 don't support [anymore] "ant" build system!

.Android SDK [old/recommended!] ---  "ant" and "gradle" build supported...    [recommended!!!]

	[Windows]	https://dl.google.com/android/repository/tools_r25.2.5-windows.zip
	[Linux]		https://dl.google.com/android/repository/tools_r25.2.5-linux.zip
	[Mac]		https://dl.google.com/android/repository/tools_r25.2.5-macosx.zip

	Hint:	
		0)unpacked/install to a "sdk" folder
		1)after unpacked/install, open a command line Terminal and go to folder "sdk/tools"
		2)run the command  ">android update sdk"   to open a GUI "SDK Manager"
		3)check "Android SDK Tools"
		4)check "Android SDK Platform-Tools"		
		6)check "Android SDK Build-Tools 29.0.3"  	
		8)go to "Android 10 (API 29)" and check only "SDK Platform"
		9)go to "Extras" and check: 
				"Android Support Repository"				
				"Android Support Library"				
				"Google USB Drive"	//windows only...
				"Google Repository"
				"Google Play Services"		

.Android SDK  [updated/modern version] --- warning: Only "gradle" build  supported...

	[Windows]	https://dl.google.com/android/repository/sdk-tools-windows-3859397.zip
	[Linux]		https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip
	[Mac]		https://dl.google.com/android/repository/sdk-tools-darwin-3859397.zip

.Android NDK
	https://developer.android.com/ndk/downloads/index.html

.Lazarus for Android

	.Option 1) Laz4Android [Windows] [cross-arm-android compiler installed!] 
			http://sourceforge.net/projects/laz4android/files/?source=navbar
			Hint: Install here: "C:\Laz4Android2.0.0"   [not "Program Files"  !!!]
				
			warning: Laz4Android2.0.0 don't support android-aarch64
			
	.Option 2) Fpcupdeluxe [Linux and windows]  [NEW! support to aarch64-android!] 
		https://github.com/LongDirtyAnimAlf/fpcupdeluxe/releases

	.Option 3) New! LAMW Manager https://forum.lazarus.freepascal.org/index.php/topic,45361.0.html
	
		https://github.com/DanielOliveiraSouza/LAMW4Linux-installer
		https://github.com/DanielOliveiraSouza/LAMW4Windows-installer
	

	.Option 4) Lazarus + FPC 3.2.0 [canonical/windows] "Do It Yourself"			

		win64:  [need FPC 3.2.0 to support android-64 bits]
		https://sourceforge.net/projects/lazarus-snapshots/files/Window%2064/lazarus-2.0.4-61666-fpc-3.2.0-beta-42593/lazarus-2.0.4-61666-fpc-3.2.0-beta-42593-win64.exe/download
		
		win32: [need FPC 3.2.0 to support android-64 bits]
		https://sourceforge.net/projects/lazarus-snapshots/files/Window%2032/lazarus-2.0.4-61666-fpc-3.2.0-beta-42593/lazarus-2.0.4-61666-fpc-3.2.0-beta-42593-win32.exe/download

			After install the LAMW packages [section II] go to:
			1. IDE "Tools" --> "[Lamw] Android Module Wizard" --> "Get FPC Source [Trunk]"
			2. IDE "Tools" --> "[Lamw] Android Module Wizard" --> "Build FPC Cross Android"

				[ex. Armv7a + Soft]	<<---- tested!
				.Build  
				.Install

				[ex. aarch64]	  	<<---- tested!
				.Build  
				.Install


			3. After "build" and "install" the cross-compiler and before to create your first LAMW project

				[How to fix "Fatal: Cannot find unit system used by fcllaz of package FCL."]

				3.1) Go to "fpc.cfg"  [ex. "lazarus\fpc\3.2.0\bin"]

					Change:
 
					# searchpath for units and other system dependent things
					-FuC:\lazarus1864\fpc\$FPCVERSION/units/$fpctarget
					-FuC:\lazarus1864\fpc\$FPCVERSION/units/$fpctarget/*
					-FuC:\lazarus1864\fpc\$FPCVERSION/units/$fpctarget/rtl

					To:

					# searchpath for units and other system dependent things
					-FuC:\lazarus1864\fpc\3.2.0/units/$fpctarget
					-FuC:\lazarus1864\fpc\3.2.0/units/$fpctarget/*
					-FuC:\lazarus1864\fpc\3.2.0/units/$fpctarget/rtl

				3.2) Go to Lazarus IDE menu "Tools" --> "Options" --> "Environment"  

					[FPC Source]

					Change:
						$(LazarusDir)fpc\$(FPCVer)\source
					To: 
						$(LazarusDir)fpc\3.2.0\source

	IMPORTANT!
		Google Play NOW require APKs to include both 32 and 64 bit version of .so libraries....
		ref.  https://github.com/jmpessoa/lazandroidmodulewizard/blob/master/docs/how_to_64bits_Apk.txt

.Ant [to build Apk]

	http://ant.apache.org/bindownload.cgi 
	Simply extract the zip file to a convenient location...

.Gradle 6.6.1 [ "must have" to build Apk with AndroidX AppCompat/Material theme]
	https://gradle.org/next-steps/?version=6.6.1&format=bin	

	Simply "extract here" the zip file to produce the folder "gradle-6.6.1" in a convenient location...

	warning: Gradle build process need internet connection!!!
	Warning: Gradle 6.X  don't support Java > 13!

.Hint [Lazarus Docked Desktop. Nice!]
	https://github.com/FlKo/LazarusDockedDesktops

.[LAMW 0.8.6] "AppCompat" [material design] theme need:'+
		1. Java JDK 1.8   
		2. Gradle 6.6.1 [https://gradle.org/next-steps/?version=6.6.1&format=bin]
		3. Android SDK "plataforms" 29 + "build-tools" 29.0.3 
		4. Android SDK/Extra	"Support Repository"
		5. Android SDK/Extra	"Support Library"
		6. Android SDK/Extra	"Google Repository"
		7. Android SDK/Extra	"Google Play Services"		

II. LAMW: Lazarus Android Module Wizard
	.ref. https://github.com/jmpessoa/lazandroidmodulewizard/archive/master.zip
	
	.Packages Installations order.

		tfpandroidbridge_pack.lpk	[..../android_bridges]
		lazandroidwizardpack.lpk	[..../android_wizard]
		amw_ide_tools.lpk		[..../ide_tools]

III. USING LAMW

1. Configure Paths:

	Lazarus IDE menu "Tools" ---> "[LAMW] Android Module Wizard" -->  "Path Settings ..."

	NOTE: [MacOs >= 10.5] path to Java JDK auto setting as: ${/usr/libexec/java_home}

2. [How to] New Project [Thanks to Ahmad Bohloolbandi (a.k.a. @developing)]

	After install "LAMW" packages and Configured the paths:

	2.1-From Lazarus IDE select "Project" -> "New Project" 
	
		ref. https://od.lk/f/Ml8xNTU4Mjc1NThf

	2.2-From displayed dialog select "[LAMW] GUI Android Module" 	

	2.3-Press OK Button.

	2.4. From Form "Android Module wizard: Configure Project..." [Workspace Form]

		ref. https://od.lk/f/Ml8xNTU4Mjc1NjBf

	2.4-Fill/complete the fields:

		"Path to workspace [projects folder]"  

			example: C:\MyLamwProjects

	2.5-Fill/complete the field:

		"New Project Name  [or Selec one]

			example: AppLAMWProject1

			[This is your Android App/Apk name]

	2.6-[MinNkd] Select the  Min. NDK api:

		example: 22         [warning: ndkApi > 22 will not run on old 4.x devices]

	2.7-[MinSdk] Select the  Min. Device Api need to run your App:

		example: 14

		warning: some LAMW component can change/need a more recent MinSdk Api

	2.8-Select Architecture/Instruction: 

		example: ARMv7a + Soft
		
		NOTE: 	.Laz4Android2.0.0 support only "ARMv6" and "ARMv7a + Soft"
			.Fpcupdeluxe support  "ARMv7a + VFPv3" and "Aarch64"
			.LAMW Manager support  "ARMv7a + VFPv3" and "Aarch64"
		
        2.9.Select Android Theme

		example: [DefaultDevice]

			or "AppCompat" for material design theme 

	2.9.Click "OK"

	2.10-Save All [unit1.pas] to path that is showed ...

3. From "Android Bridge" component tab drag/drop a jTextView in the "Android Module Form" designer

	set property: 
		PosRelativeToParent  = [rpTop,rpCenterHorizontal]

	WARNING!
		.Please, whenever a dialog prompt, select "Reload from disk"

4. From "Android Bridge" component tab drag/drop a jButton the "Android Module Form" designer

	set property: 
		Anchor = jTextView1
	set property: 
		PosRelativeToAnchor : [raBelow]
	set property:
		PosRelativeToParent = [rpCenter]

	write code for event property "OnClick":
		example: ShowMessage('Hello!')

5.  Lazarus IDE menu "Run" ---> "Build"    

	PANIC? Please, go to:
		III.1. "Configure Paths" and fix its!

6. Connect your Device to Computer [usb] and configure it to "debug mode"     

	"App settings"  ---> more/aditional -- developer options [*]:  

		stay awake  [checked!]
		usb debugging [checked!]
		verify apps via usb [checked!]

	PANIC? Go to Google search with "android usb debugging <device name>" to get the operating mode adapted to your device...
	
		ex. Galaxy S3/S4 --> app settings --> about -->> Build number -->> [tap,tap,tap,...]
        	ex. MI 2 --> app settings --> about -->> MIUI Version -->> [tap,tap,tap,...]

7.Lazarus IDE menu "Run" ---> "[Lamw] Build Apk and Run" [Congratulations!!!]

8) How to get more/others ".so" chipset builds:
	
	.warning: Your Lazarus/Freepascal needs to be prepared [cross-compile] for the various chipset builds! 
		ref.  https://github.com/jmpessoa/lazandroidmodulewizard/blob/master/docs/how_to_64bits_Apk.txt

	8.1. From LazarusIDE menu:
		> Project -> Project Options -> Project Options -> [LAMW] Android Project Options -> "Build" -> Chipset [select!] -> [OK]
	8.2. From LazarusIDE  menu:
		> Run -> Clean up and Build...
	8.3. From LazarusIDE menu:
		> [LAMW] Build Android Apk and Run

	NOTE: If desirable/wanted repeat 8.1/8.2/8.3 for other CPUs...


9. Using/Testing "Demos":  [Please, before try a demo, do yourself a first "hello world" apk!]

	[so, you can test your environment settings ...]

	.Lazarus IDE menu --> Open the project *.lpi   [....\jni]
	.Lazarus IDE menu --> Project -->  Project Inspector --> "Unit1.pas"  [etc...]
	.Lazarus IDE menu "Run" ---> "Build"    
	.Lazarus IDE menu "Run" ---> "[Lamw] Build Apk and Run" 

	[Congratulations!!!]

10. NOTE1: All LAMW projects [and demos] are Android Studio/Eclipse compatibles!
	ref. https://github.com/jmpessoa/lazandroidmodulewizard/blob/master/docs/How_to_open_LAMW_project_with_AndroidStudio.txt

    NOTE2: Components from  Palettes/Tabs "Android Bridges AppCompat"  and "Android Bridges JCenter" need build system "Gradle" [and Internet connection]

11. About "untitled" demos:

AppTest1 : multi-form demo
AppTest2: jni coding "the hard way"
AppTryCode1: jHello component demo [array, strings,  etc...]
AppTryCode2: jMediaPlayer1 and  jSurfaceView1 components demo 
AppTryCode2: jDumpJavaMethods component demo [about java to pascal converter...]


	Thanks to All!
	

[FAQ 2]: [Thanks to Ahmad Bohloolbandi (a.k.a. @developing) ]

#Question: How do we can design a layout that shown same in real device?

[Answer]: You should use the component properties: 

		"Anchor", 
		"PosRelativeToParent", 
		"PosRelativeToAnchor", 
		"LayoutParamHeight", 
		"LayoutParamWhidth" 
          
Example: 

1-Put a "jTextView" component on your AndroidModule form:

	Set "PosRelativeToParent"
		"rpCenterHorizontal" [True]
		"rpTop" [True]

2-Put a "jButton" component on AndroidModule form:

	Set "Anchor" to "jTextView" (Because you should set position relative with "jTextView")
	set "PosRelativeToAnchor"
		"raBelow" [True]

3-Put a "jEditText" component on form:

	Set "Anchor" to "jButton".
	Set "PosRelativeToAnchor"
		"raBelow" [True]

NOTE: 	Anchor setting is most important section of this design, 
	because your component position depends on this property.
	And for change width and/or height of each components you should 
	change/configure "LayoutParamWhidth" and/or "LayoutParamHeight".
